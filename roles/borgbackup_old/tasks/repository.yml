---
- name: 'security | borgbackup | create, update, or delete repository user'
  ansible.builtin.user:
    name: '{{ item.user | d(item.name | mandatory) }}'
    home: '{{ item. }}'
    createhome: true
    shell: '/bin/bash'
    comment: '{{ item.comment | d("borgbackup@%s" % item.name | mandatory) }}'
    state: '{{ item.state | d("present") }}'
  loop: '{{ borgbackup_repository }}'
  when:
  - borgbackup_state != 'absent'

- name: 'security | borgbackup | create, update, or delete repository'
  ansible.builtin.file:
    dest: '{{ item.storage | d(borgbackup_datadir + "/" + item.name | mandatory) }}'
    owner: '{{ item.user | d(item.name | mandatory) }}'
    group: '{{ item.user | d(item.name | mandatory) }}'
    mode: '0700'
    state: '{{ item.state | d("present") | regex_replace("present", "directory") }}'
  loop: '{{ borgbackup_repository }}'
  when:
  - borgbackup_state != 'absent

- name: 'security | borgbackup | create, update, or delete borgbackup repository'
  include_role:
    name: 'havlasme.linux.user'
  vars:
    linux_user:
    - name: "{{ _borgbackup_repository.name | mandatory }}"
      comment: "{{ _borgbackup_repository.comment | d('borgbackup_%s' % (_borgbackup_repository.name | mandatory)) }}"
      home: "{{ _borgbackup_repository.storage | d(borgbackup_datadir + '/' + (_borgbackup_repository.name | mandatory)) }}"
      state: "{{ _borgbackup_repository.state | d('present') }}"
      authorized_key:
      - key: "{{ lookup('file', _borgbackup_repository.key | d((_borgbackup_repository.name | mandatory) + '/id_ssh.pub')) }}"
        key_options: 'restrict,command="borg serve --restrict-to-path={{ _borgbackup_repository.storage | d(borgbackup_datadir + "/" + (_borgbackup_repository.name | mandatory)) }}"'
        comment: "{{ _borgbackup_repository.comment | d('borgbackup_%s' % (_borgbackup_repository.name | mandatory)) }}"
  loop: '{{ borgbackup_repository }}'
  loop_control:
    loop_var: "_borgbackup_repository"
  when:
  - borgbackup_state != 'absent'
