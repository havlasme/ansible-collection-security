#jinja2: trim_blocks: True, lstrip_blocks: True
#!/usr/sbin/nft -f
{{ ansible_managed | comment }}

{#  an opinionated stateful firewall setup

    # allow icmp ping traffic at the input chain
    item.accept_ping: "yes"
    # allow multicast traffic at the input chain
    item.accept_multicast: "no"
    # open ssh service port
    item.ssh_port: 22
#}

add table inet filter
add chain inet filter INPUT { type filter hook input priority 0; policy drop; }
add chain inet filter FORWARD { type filter hook forward priority 0; policy drop; }
add chain inet filter OUTPUT { type filter hook output priority 0; policy accept; }
add chain inet filter TCP
add chain inet filter UDP
{% if item.accept_multicast | d('no') | bool %}
add chain inet filter MULTICAST
{% endif %}
add rule inet filter INPUT ct state related,established accept
add rule inet filter INPUT iifname lo accept
add rule inet filter INPUT ct state invalid counter drop
{% if item.accept_ping | d('yes') | bool %}
add rule inet filter INPUT meta l4proto icmp icmp type { destination-unreachable, echo-request, parameter-problem, router-advertisement, router-solicitation, time-exceeded } accept
add rule inet filter INPUT meta l4proto ipv6-icmp icmpv6 type { destination-unreachable, echo-request, ind-neighbor-solicit, ind-neighbor-advert, mld-listener-query, mld-listener-report, mld-listener-reduction, mld2-listener-report, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, packet-too-big, parameter-problem, time-exceeded } accept
{% endif %}
{% if item.accept_multicast | d('no') | bool %}
add rule inet filter INPUT pkttype multicast jump MULTICAST
{% endif %}
add rule inet filter INPUT meta l4proto udp ct state new jump UDP
add rule inet filter INPUT tcp flags & (fin|syn|rst|ack) == syn ct state new jump TCP
add rule inet filter INPUT meta l4proto udp counter reject
add rule inet filter INPUT meta l4proto tcp counter reject with tcp reset
add rule inet filter INPUT counter reject with icmpx type port-unreachable
add rule inet filter TCP tcp dport {{ item.ssh_port | d(22) }} accept
{% if item.accept_multicast | d('no') | bool %}
add rule inet filter MULTICAST counter accept
{% endif %}
